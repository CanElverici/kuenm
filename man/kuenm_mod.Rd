% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kuenm_mod.R
\name{kuenm_mod}
\alias{kuenm_mod}
\title{Creation of Maxent models with selected parameters}
\usage{
kuenm_mod(occ.joint, M.var.dir, out.eval, batch, rep.n = 10,
  rep.type = "Bootstrap", jackknife = FALSE, out.dir,
  out.format = "logistic", project = FALSE, G.var.dir, ext.type = "all",
  write.mess = FALSE, write.clamp = FALSE, maxent.path, args = NULL,
  wait = TRUE, run = TRUE)
}
\arguments{
\item{occ.joint}{(character) the  csv file with all the occurrences; columns must be: species, longitude, latitude.}

\item{M.var.dir}{(character) name of the forlder containing folders in which calibration environmental
datasets are placed.}

\item{out.eval}{(character) name of the folder where evaluation results (from calibration) were written.}

\item{batch}{(character) name of the batch file (bash for Unix) with the code to create final Maxent models.}

\item{rep.n}{(numeric) number of model replicates, default = 10.}

\item{rep.type}{(character) the replicate type; it can be: "Crossvalidate", "Bootstrap", or "Subsample".}

\item{jackknife}{(logical) if TRUE, a jackknife process is performed while runing Maxent models, default = FALSE.}

\item{out.dir}{(character) name of the output directory to be created and in which all model subdirectories
will be created.}

\item{out.format}{(character) the model output format; it can be: "raw", "logistic", "cloglog", or "cumulative".}

\item{project}{(logical) if TRUE, your models will be projected to scenarios in G.var.dir, default = FALSE.}

\item{G.var.dir}{(character) if project is TRUE, name of the folder containing folders in which variables of
projection scenarios are placed.}

\item{ext.type}{(character) if project is TRUE, is the extrapolation type of projections; can be: "all", "ext_clam",
"ext", and "no_ext", default = "all". ext = free extrapolation, ext_clam = extrapolation and clamping,
no_ext = no extrapolation, and all = all three of the options listed above.}

\item{write.mess}{(logical) if TRUE, grids of MESS analysis results will be written, default = FALSE.}

\item{write.clamp}{(logical) if TRUE, a grid of the spatial distribution of clamping will be written, default = FALSE.}

\item{maxent.path}{(character) the path were the maxent.jar file is in your computer.}

\item{args}{(character) additional arguments that can be passed to Maxent. See the Maxent help for more information
on how to write these arguments, default = NULL. Note that some arguments cannot be changed here because they are
part of the parameters of the function already (e.g., "writemess").}

\item{wait}{(logical) if TRUE R will wait until all the Maxent models are created. If FALSE the process of
model creation will be performed separately and R could be used at the same time. This may be useful for evaluating
candidate models parallelly. Default = TRUE.}

\item{run}{(logical) if TRUE, the batch runs after its creation; if FALSE, it will only be created and its running
would be manual, default = TRUE.}
}
\value{
A folder named as out.dir with all the subfolders to save Maxent final model results when running the .bat file
(.sh for Unix). A batch file (bash for Unix) for creating all the final Maxent models with their projections if project = TRUE.
}
\description{
kuenm_mod creates and executes a batch file (bash for Unix) for generating Maxent models using
parameters previously selected with the \code{\link{kuenm_ceval}} function.
}
\details{
Same requirements regarding Java and maxent than in \code{\link{kuenm_cal}}.
}
\examples{
# To run this function model evaluation and selection using the kuenm_ceval function should have been used before.
# The evaluation function generates one of the imputs needed.

# Variables with information to be used as arguments.
occ_joint <- "aame_joint.csv"
M_var_dir <- "M_variables"
out_eval <- "Calibration_results"
batch_fin <- "Final_models"
mod_dir <- "Final_Models"
rep_n <- 10
rep_type <- "Bootstrap"
jackknife <- FALSE
G_var_dir <- "G_variables"
out_format <- "logistic"
project <- TRUE
ext_type <- "all"
write_mess <- FALSE
write_clamp <- FALSE
wait1 <- FALSE
run1 <- TRUE
args <- NULL

kuenm_mod(occ.joint = occ_joint, M.var.dir = M_var_dir, out.eval = out_eval, batch = batch_fin, rep.n = rep_n,
          rep.type = rep_type, jackknife = jackknife, out.dir = mod_dir, out.format = out_format, project = project,
          G.var.dir = G_var_dir, ext.type = ext_type, write.mess = write_mess, write.clamp = write_clamp,
          maxent.path = maxent_path, args = args, wait = wait1, run = run1)
}
